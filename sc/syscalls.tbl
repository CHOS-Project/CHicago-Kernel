// File author is √çtalo Lima Marconato Matias
//
// Created on January 18 of 2020, at 13:40 BRT
// Last edited on February 02 of 2020, at 14:15 BRT

// To define a new syscall you just need to put the name here somewhere
// There is no need to explicitly put the number, as the makefile will automatically do its magic and determine the number based on the position of the syscall here
// The format of the syscall definitions here is <return type> <name>
// This file will be "compiled" into the header file sc.h and the C file sctable.c
// sc.h contains all the prototypes for the system calls
// sctable.c contains all the system call table, each entry is an UIntPtr, that the arch specific syscall handler should convert to a pointer to a function containing 6 arguments

Status SysGetVersion
Status SysCloseHandle
Status MmAllocAddress
Status MmFreeAddress
Status MmSyncMemory
Status MmGiveHint
Status MmChangeProtection
Status PsCreateThread
IntPtr PsGetCurrentThread
IntPtr PsGetCurrentProcess
Void PsSleep
Status PsWait
Status PsWaitForAddress
Status PsWakeAddress
Void PsExitThread
Void PsExitProcess
Status FsOpenFile
Status FsReadFile
Status FsWriteFile
Status FsMountFile
Status FsUmountFile
Status FsReadDirectoryEntry
Status FsFindInDirectory
Status FsControlFile
Status FsMapFile
Status FsUnmapFile
Status FsGetFileSize
Status FsGetPosition
Status FsSetPosition
Status IpcCreatePort
Status IpcCreateResponsePort
Status IpcRemovePort
Status IpcCheckPort
Status IpcSendMessage
Status IpcSendResponse
Status IpcReceiveMessage
Status IpcReceiveResponse
Status ShmCreateSection
Status ShmMapSection
Status ShmUnmapSection
